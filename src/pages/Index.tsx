import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Helmet } from 'react-helmet-async';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Card, CardContent } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import AutoNewsGenerator from '@/components/AutoNewsGenerator';
import SEOHead from '@/components/SEOHead';
import StructuredData from '@/components/StructuredData';
import { newsData } from '@/data/newsData';
import NotificationStack from '@/components/NotificationStack';

const categories = [
  { name: '–ì–ª–∞–≤–Ω–∞—è', icon: 'Home' },
  { name: 'IT', icon: 'Code' },
  { name: '–ò–≥—Ä—ã', icon: 'Gamepad2' },
  { name: '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞', icon: 'Bitcoin' },
  { name: '–≠–∫–æ–Ω–æ–º–∏–∫–∞', icon: 'TrendingUp' },
  { name: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', icon: 'Cpu' },
  { name: '–°–ø–æ—Ä—Ç', icon: 'Trophy' },
  { name: '–ö—É–ª—å—Ç—É—Ä–∞', icon: 'Palette' },
  { name: '–ú–∏—Ä', icon: 'Globe' }
];

const API_URL = 'https://functions.poehali.dev/d4635673-3760-41d9-9a96-ec32f8a0294c';

const formatTime = (isoDate: string) => {
  if (!isoDate) return '–ù–µ–¥–∞–≤–Ω–æ';
  
  try {
    const date = new Date(isoDate);
    if (isNaN(date.getTime())) return '–ù–µ–¥–∞–≤–Ω–æ';
    
    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffMinutes = Math.floor(diffMs / (1000 * 60));
    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));
    
    if (diffMinutes < 1) return '–¢–æ–ª—å–∫–æ —á—Ç–æ';
    if (diffMinutes < 60) return `${diffMinutes} ${diffMinutes === 1 ? '–º–∏–Ω—É—Ç—É' : diffMinutes < 5 ? '–º–∏–Ω—É—Ç—ã' : '–º–∏–Ω—É—Ç'} –Ω–∞–∑–∞–¥`;
    if (diffHours < 24) return `${diffHours} ${diffHours === 1 ? '—á–∞—Å' : diffHours < 5 ? '—á–∞—Å–∞' : '—á–∞—Å–æ–≤'} –Ω–∞–∑–∞–¥`;
    
    const diffDays = Math.floor(diffHours / 24);
    return `${diffDays} ${diffDays === 1 ? '–¥–µ–Ω—å' : diffDays < 5 ? '–¥–Ω—è' : '–¥–Ω–µ–π'} –Ω–∞–∑–∞–¥`;
  } catch {
    return '–ù–µ–¥–∞–≤–Ω–æ';
  }
};

const Index = () => {
  const navigate = useNavigate();
  const [activeCategory, setActiveCategory] = useState('–ì–ª–∞–≤–Ω–∞—è');
  const [menuOpen, setMenuOpen] = useState(false);
  const [news, setNews] = useState<any[]>(newsData);
  const [loading, setLoading] = useState(false);
  const [expandedNewsId, setExpandedNewsId] = useState<number | null>(null);
  const [totalNewsCount, setTotalNewsCount] = useState(newsData.length);
  const [serverStatus, setServerStatus] = useState<string>('–ù–æ–≤–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –∫—ç—à–∞');
  const [apiAttempts, setApiAttempts] = useState(0);
  const [notifications, setNotifications] = useState<Array<{id: string, message: string, type: 'info' | 'success' | 'warning' | 'error', timestamp: Date}>>([]);

  const addNotification = (message: string, type: 'info' | 'success' | 'warning' | 'error' = 'info') => {
    const id = Date.now().toString();
    setNotifications(prev => [...prev, { id, message, type, timestamp: new Date() }]);
  };

  const dismissNotification = (id: string) => {
    setNotifications(prev => prev.filter(n => n.id !== id));
  };

  useEffect(() => {
    fetchNews();
    
    const pollInterval = setInterval(() => {
      fetchNewsSilently();
    }, 30000);
    
    return () => clearInterval(pollInterval);
  }, [activeCategory]);

  useEffect(() => {
    const filtered = activeCategory === '–ì–ª–∞–≤–Ω–∞—è' 
      ? newsData 
      : newsData.filter(n => n.category === activeCategory);
    setNews(filtered);
  }, [activeCategory]);

  const fetchNews = async () => {
    setLoading(true);
    setApiAttempts(prev => prev + 1);
    try {
      const url = activeCategory === '–ì–ª–∞–≤–Ω–∞—è' 
        ? API_URL 
        : `${API_URL}?category=${encodeURIComponent(activeCategory)}`;
      
      setServerStatus(`–ü–æ–ø—ã—Ç–∫–∞ ${apiAttempts + 1}: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...`);
      addNotification(`–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É (–ø–æ–ø—ã—Ç–∫–∞ ${apiAttempts + 1})...`, 'info');
      
      const response = await fetch(url, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      
      if (!response.ok) {
        setServerStatus(`‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (${response.status}). –ü–æ–∫–∞–∑–∞–Ω—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏`);
        addNotification(`–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å ${response.status}). –ü–æ–∫–∞–∑–∞–Ω—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏`, 'warning');
        const filtered = activeCategory === '–ì–ª–∞–≤–Ω–∞—è' 
          ? newsData 
          : newsData.filter(n => n.category === activeCategory);
        setNews(filtered);
        setLoading(false);
        return;
      }
      
      const data = await response.json();
      
      if (data && Array.isArray(data.news)) {
        setNews(data.news);
        setTotalNewsCount(data.count || data.news.length);
        setServerStatus(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${data.news.length} –Ω–æ–≤–æ—Å—Ç–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞`);
        addNotification(`–£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${data.news.length} –Ω–æ–≤–æ—Å—Ç–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞`, 'success');
      } else {
        const filtered = activeCategory === '–ì–ª–∞–≤–Ω–∞—è' 
          ? newsData 
          : newsData.filter(n => n.category === activeCategory);
        setNews(filtered);
        setServerStatus('‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–∫–∞–∑–∞–Ω—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:', error);
      setServerStatus(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–ø–æ–ø—ã—Ç–∫–∞ ${apiAttempts + 1}). –ü–æ–∫–∞–∑–∞–Ω—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏`);
      addNotification(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü–æ–∫–∞–∑–∞–Ω—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏`, 'error');
      const filtered = activeCategory === '–ì–ª–∞–≤–Ω–∞—è' 
        ? newsData 
        : newsData.filter(n => n.category === activeCategory);
      setNews(filtered);
    } finally {
      setLoading(false);
    }
  };
  
  const fetchNewsSilently = async () => {
    try {
      const url = activeCategory === '–ì–ª–∞–≤–Ω–∞—è' 
        ? API_URL 
        : `${API_URL}?category=${encodeURIComponent(activeCategory)}`;
      
      const response = await fetch(url);
      
      if (!response.ok) {
        setServerStatus('üîÑ –§–æ–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
        return;
      }
      
      const data = await response.json();
      
      if (data && Array.isArray(data.news)) {
        setNews(data.news);
        setTotalNewsCount(data.count || data.news.length);
        setServerStatus(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${data.news.length} –Ω–æ–≤–æ—Å—Ç–µ–π`);
      }
    } catch (error) {
      console.log('–§–æ–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ');
    }
  };

  const filteredNews = news;

  const pageTitle = activeCategory === '–ì–ª–∞–≤–Ω–∞—è' 
    ? '–ù–û–í–û–°–¢–ò 24 - –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –†–æ—Å—Å–∏–∏ –∏ –º–∏—Ä–∞'
    : `${activeCategory} - –ù–æ–≤–æ—Å—Ç–∏ | –ù–û–í–û–°–¢–ò 24`;
  
  const pageDescription = activeCategory === '–ì–ª–∞–≤–Ω–∞—è'
    ? '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–Ω—è: –ø–æ–ª–∏—Ç–∏–∫–∞, —ç–∫–æ–Ω–æ–º–∏–∫–∞, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —Å–ø–æ—Ä—Ç, –∫—É–ª—å—Ç—É—Ä–∞. –û–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –†–æ—Å—Å–∏–∏ –∏ –º–∏—Ä–∞ 24/7'
    : `–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${activeCategory}. –°–≤–µ–∂–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Ä–µ–ø–æ—Ä—Ç–∞–∂–∏ 24/7`;

  const currentUrl = window.location.href;
  
  return (
    <div className="min-h-screen bg-background flex flex-col">
      <AutoNewsGenerator onNewsCreated={fetchNews} />
      <NotificationStack notifications={notifications} onDismiss={dismissNotification} />
      <SEOHead 
        title={pageTitle}
        description={pageDescription}
        keywords={`–Ω–æ–≤–æ—Å—Ç–∏, ${activeCategory.toLowerCase()}, —Ä–æ—Å—Å–∏—è, –º–∏—Ä, –æ–Ω–ª–∞–π–Ω, —Å–µ–≥–æ–¥–Ω—è, —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏, –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏`}
        ogType="website"
        canonicalUrl={currentUrl}
      />
      
      <StructuredData 
        type="WebSite"
        data={{
          name: '–ù–û–í–û–°–¢–ò 24',
          url: currentUrl.split('?')[0],
          description: '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –†–æ—Å—Å–∏–∏ –∏ –º–∏—Ä–∞. –ü–æ–ª–∏—Ç–∏–∫–∞, —ç–∫–æ–Ω–æ–º–∏–∫–∞, —Å–ø–æ—Ä—Ç, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∫—É–ª—å—Ç—É—Ä–∞. –°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.'
        }}
      />
      <header className="sticky top-0 z-50 bg-white border-b border-border shadow-sm">
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center gap-3">
              <div className="w-10 h-10 bg-primary rounded-lg flex items-center justify-center">
                <Icon name="Newspaper" className="text-white" size={24} />
              </div>
              <div>
                <h1 className="text-2xl font-bold text-foreground">–ù–û–í–û–°–¢–ò 24</h1>
                <p className="text-xs text-muted-foreground">{serverStatus}</p>
              </div>
            </div>

            <button 
              className="lg:hidden p-2"
              onClick={() => setMenuOpen(!menuOpen)}
              aria-label="–ú–µ–Ω—é"
            >
              <Icon name={menuOpen ? "X" : "Menu"} size={24} />
            </button>

            <nav className="hidden lg:flex items-center gap-2">
              {categories.map((cat) => (
                <Button
                  key={cat.name}
                  variant={activeCategory === cat.name ? "default" : "ghost"}
                  onClick={() => setActiveCategory(cat.name)}
                  className="gap-2"
                >
                  <Icon name={cat.icon} size={16} />
                  {cat.name}
                </Button>
              ))}
            </nav>

            <div className="hidden lg:flex items-center gap-2">
              <Button variant="ghost" size="icon">
                <Icon name="Search" size={20} />
              </Button>
              <Button variant="ghost" size="icon">
                <Icon name="Bell" size={20} />
              </Button>
            </div>
          </div>

          {menuOpen && (
            <nav className="lg:hidden py-4 animate-fade-in">
              <div className="flex flex-col gap-2">
                {categories.map((cat) => (
                  <Button
                    key={cat.name}
                    variant={activeCategory === cat.name ? "default" : "ghost"}
                    onClick={() => {
                      setActiveCategory(cat.name);
                      setMenuOpen(false);
                    }}
                    className="gap-2 justify-start"
                  >
                    <Icon name={cat.icon} size={16} />
                    {cat.name}
                  </Button>
                ))}
              </div>
            </nav>
          )}
        </div>
      </header>

      <main className="container mx-auto px-4 py-8 flex-1">
        <div className="mb-8 animate-slide-up">
          <h2 className="text-sm uppercase tracking-wider text-muted-foreground mb-4 font-semibold">
            {activeCategory === '–ì–ª–∞–≤–Ω–∞—è' ? '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏' : activeCategory}
          </h2>
        </div>

        {loading ? (
          <div className="flex items-center justify-center py-20">
            <Icon name="Loader2" size={48} className="animate-spin text-primary" />
          </div>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredNews.map((newsItem, index) => (
              <Card 
                key={newsItem.id} 
                className="group overflow-hidden hover:shadow-xl transition-all duration-300 cursor-pointer border-0 animate-slide-in-up"
                style={{ animationDelay: `${index * 50}ms` }}
                onClick={() => navigate(`/news/${newsItem.id}`)}
              >
                <div className="relative overflow-hidden bg-muted">
                  {newsItem.image ? (
                    <img 
                      src={newsItem.image} 
                      alt={newsItem.title}
                      className="w-full h-56 object-cover group-hover:scale-105 transition-transform duration-500"
                      onError={(e) => {
                        e.currentTarget.src = 'https://images.unsplash.com/photo-1504711434969-e33886168f5c?w=800';
                      }}
                    />
                  ) : (
                    <div className="w-full h-56 flex items-center justify-center bg-gradient-to-br from-primary/10 to-primary/5">
                      <Icon name="Image" size={48} className="text-muted-foreground" />
                    </div>
                  )}
                  {newsItem.isHot && (
                    <Badge className="absolute top-4 left-4 bg-primary text-white gap-1">
                      <Icon name="Flame" size={14} />
                      –ì–æ—Ä—è—á–µ–µ
                    </Badge>
                  )}
                  <div className="absolute top-4 right-4">
                    <Badge variant="secondary" className="bg-white/90 text-foreground backdrop-blur-sm">
                      {newsItem.category}
                    </Badge>
                  </div>
                </div>
                <CardContent className="p-6">
                  <script type="application/ld+json">
                    {JSON.stringify({
                      "@context": "https://schema.org",
                      "@type": "NewsArticle",
                      "headline": newsItem.title,
                      "description": newsItem.excerpt,
                      "image": newsItem.image,
                      "datePublished": newsItem.time,
                      "author": {
                        "@type": "Organization",
                        "name": "–ù–û–í–û–°–¢–ò 24"
                      },
                      "publisher": {
                        "@type": "Organization",
                        "name": "–ù–û–í–û–°–¢–ò 24"
                      },
                      "articleSection": newsItem.category
                    })}
                  </script>
                  <div className="flex items-center gap-2 text-xs text-muted-foreground mb-3">
                    <Icon name="Clock" size={14} />
                    {formatTime(newsItem.time)}
                  </div>
                  <h3 className="text-xl font-bold mb-3 group-hover:text-primary transition-colors leading-tight">
                    {newsItem.title}
                  </h3>
                  <p className="text-muted-foreground text-sm leading-relaxed">
                    {newsItem.excerpt}
                  </p>
                  <div 
                    className="mt-4 p-0 h-auto font-semibold text-primary hover:bg-transparent group/btn inline-flex items-center cursor-pointer"
                    onClick={(e) => {
                      e.stopPropagation();
                      navigate(`/news/${newsItem.id}`);
                    }}
                  >
                    –ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ
                    <Icon 
                      name="ArrowRight" 
                      size={16} 
                      className="ml-2 group-hover/btn:translate-x-1 transition-transform" 
                    />
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        )}
        {!loading && filteredNews.length === 0 && (
          <div className="text-center py-20">
            <Icon name="FileX" size={64} className="mx-auto text-muted-foreground mb-4" />
            <h3 className="text-xl font-semibold mb-2">–ù–æ–≤–æ—Å—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
            <p className="text-muted-foreground">–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–π</p>
          </div>
        )}
      </main>

      <footer className="bg-secondary text-secondary-foreground mt-auto">
        <div className="container mx-auto px-4 py-12">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div>
              <div className="flex items-center gap-3 mb-4">
                <div className="w-10 h-10 bg-primary rounded-lg flex items-center justify-center">
                  <Icon name="Newspaper" className="text-white" size={24} />
                </div>
                <h3 className="text-xl font-bold">–ù–û–í–û–°–¢–ò 24</h3>
              </div>
              <p className="text-sm opacity-80">
                –í–∞—à –≥–ª–∞–≤–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
              </p>
            </div>
            
            <div>
              <h4 className="font-semibold mb-4">–†–∞–∑–¥–µ–ª—ã</h4>
              <ul className="space-y-2 text-sm opacity-80">
                <li><a href="#" className="hover:opacity-100 transition-opacity">–ü–æ–ª–∏—Ç–∏–∫–∞</a></li>
                <li><a href="#" className="hover:opacity-100 transition-opacity">–≠–∫–æ–Ω–æ–º–∏–∫–∞</a></li>
                <li><a href="#" className="hover:opacity-100 transition-opacity">–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</a></li>
                <li><a href="#" className="hover:opacity-100 transition-opacity">–°–ø–æ—Ä—Ç</a></li>
              </ul>
            </div>
            
            <div>
              <h4 className="font-semibold mb-4">–û –Ω–∞—Å</h4>
              <ul className="space-y-2 text-sm opacity-80">
                <li><a href="#" className="hover:opacity-100 transition-opacity">–†–µ–¥–∞–∫—Ü–∏—è</a></li>
                <li><a href="#" className="hover:opacity-100 transition-opacity">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
                <li><a href="#" className="hover:opacity-100 transition-opacity">–†–µ–∫–ª–∞–º–∞</a></li>
                <li><a href="#" className="hover:opacity-100 transition-opacity">–í–∞–∫–∞–Ω—Å–∏–∏</a></li>
              </ul>
            </div>
            
            <div>
              <h4 className="font-semibold mb-4">–ü–æ–¥–ø–∏—Å–∫–∞</h4>
              <p className="text-sm opacity-80 mb-4">
                –ü–æ–ª—É—á–∞–π—Ç–µ –≥–ª–∞–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ –ø–æ—á—Ç—É
              </p>
              <div className="flex gap-2">
                <Button variant="secondary" size="icon" className="bg-white/10 hover:bg-white/20">
                  <Icon name="Mail" size={18} />
                </Button>
                <Button variant="secondary" size="icon" className="bg-white/10 hover:bg-white/20">
                  <Icon name="Rss" size={18} />
                </Button>
              </div>
            </div>
          </div>
          
          <div className="border-t border-white/10 mt-8 pt-8 text-center text-sm opacity-60">
            ¬© 2024 –ù–û–í–û–°–¢–ò 24. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;